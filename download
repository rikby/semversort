#!/usr/bin/env bash
# Download
#    curl -Ls https://raw.github.com/rikby/semversort/master/download | bash
# Download particular version
#    curl -Ls https://raw.github.com/rikby/semversort/master/download | bash -s -- --version 0.1.0
# Download and set custom path to binary file
#    curl -Ls https://raw.github.com/rikby/semversort/master/download | bash -s -- --file 0.1.0
#
# Source in master branch:
#    https://raw.github.com/rikby/semversort/master/semversort.sh
#

set -o errexit
set -o pipefail
set -o nounset
#set -o xtrace

version=0.1.0
output_file='/usr/local/bin/semversort'
action='download'
base_url='https://github.com/rikby/semversort'

# validate and redefine options
OPTS=`getopt -o lv:f: -l versions,version:,file: -- "$@"`
eval set -- "${OPTS}"

while true; do
  case "${1}" in
    --version|-v)
      version="$2";
      shift 2;
      ;;
    --versions|-l)
      action='versions';
      shift;
      ;;
    --file|-f)
      output_file="$2";
      shift 2;
      ;;
    --)
      shift
      break
      ;;
    *)
      echo "${0}: unparseable option ${1}."
      exit 3
      ;;
  esac
done

if [ 'versions' == "${action}" ]; then
  curl -Ls https://api.github.com/repos/rikby/semversort/tags | grep '"name"' | cut -d '"' -f 4
  exit 0
fi

no_file=0
if [ ! -f "${output_file}" ]; then
  no_file=1
  touch ${output_file}
fi

echo "Fetching https://github.com/rikby/semversort/releases/download/${version}/semversort..."
http_code=$(curl -Ls https://github.com/rikby/semversort/releases/download/${version}/semversort \
  --fail -w '%{http_code}' --output ${output_file} || err=$?)

if [ '200' != "${http_code}" ]; then
  echo "error: [${http_code}] No such version or bad connection."
  if [ ${no_file} == 1 ]; then
    rm -rf ${output_file}
  fi
  exit 8
fi

if [[ ! "$(uname -a)" =~ 'Msys' ]]; then
  chmod +x ${output_file}
fi
echo 'Semantic version sort: '${output_file}

